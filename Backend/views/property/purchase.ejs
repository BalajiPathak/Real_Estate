<%- include('../includes/head.ejs') %>
<%- include('../includes/header.ejs') %>
<%- include('../includes/navbar.ejs') %>

<!-- Add these additional styles -->
<style>
    .purchase-container {
        max-width: 1200px;
        margin: 50px auto;
        min-height: 70vh;
        display: flex;
        align-items: center;
        padding: 0 20px;
    }
    .purchase-wrapper {
        width: 100%;
        display: flex;
        justify-content: center;
    }
    .purchase-card {
        width: 600px;
        background: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
    }
    .purchase-header {
        text-align: center;
        padding: 20px;
        background-color: #f8f9fa;
        border-bottom: 2px solid #d3a033;
        border-radius: 8px 8px 0 0;
    }
    .purchase-title {
        color: #2c3e50;
        margin: 0;
        font-size: 24px;
    }
    .purchase-body {
        padding: 30px;
    }
    .property-name {
        color: #34495e;
        text-align: center;
        margin-bottom: 20px;
        font-size: 20px;
    }
    .property-description {
        color: #576574;
        margin-bottom: 25px;
        line-height: 1.6;
    }
    .property-price {
        text-align: center;
        margin-bottom: 25px;
    }
    .price-text {
        font-size: 24px;
        color: #2c3e50;
        font-weight: 600;
    }
    .button-wrapper {
        text-align: center;
    }
    .checkout-button {
        background-color: #d3a033;
        color: white;
        border: none;
        padding: 15px 50px;
        font-size: 18px;
        font-weight: bold;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    .checkout-button:hover {
        background-color: #b88928;
        transform: translateY(-2px);
    }
    #payment-form {
        width: 100%;
        margin-top: 20px;
    }
    #card-element {
        padding: 12px;
        border: 1px solid #e0e0e0;
        border-radius: 4px;
        background: white;
        margin-bottom: 20px;
    }
    #card-errors {
        color: #dc3545;
        margin-bottom: 15px;
        font-size: 14px;
    }
    .payment-processing {
        display: none;
        text-align: center;
        margin-top: 15px;
    }
</style>

<div class="purchase-container">
    <div class="purchase-wrapper">
        <div class="purchase-card">
            <div class="purchase-header">
                <h3 class="purchase-title">Secure Payment</h3>
            </div>
            <div class="purchase-body">
                <div class="payment-summary">
                    <h5 class="property-name"><%= property.name %></h5>
                    <div class="summary-row text-center">
                        <span>Property Price:</span>
                        <span>$<%= property.price.toLocaleString() %></span>
                    </div>
                    <div class="summary-row summary-total text-center">
                        <span>Total Amount:</span>
                        <span>$<%= property.price.toLocaleString() %></span>
                    </div>
                </div>

                <form id="payment-form">
                    <div class="payment-section">
                        <div class="payment-row ">
                            <div class="payment-field">
                                <label class="payment-label">Email</label>
                                <input type="email" class="payment-input" value="<%= user.Email %>" readonly>
                            </div>
                        </div>
                        
                        <div class="payment-row">
                            <div class="payment-field">
                                <label class="payment-label">Card Information</label>
                                <div id="card-element" class="payment-input"></div>
                                <div id="card-errors" role="alert"></div>
                            </div>
                        </div>
                    </div>

                    <div class="button-wrapper">
                        <button type="submit" id="checkout-button" class="checkout-button">
                            Pay $<%= property.price.toLocaleString() %>
                        </button>
                    </div>
                    <div class="payment-processing">
                        <div class="spinner"></div>
                        <p>Processing your payment...</p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>
    const stripe = Stripe('<%= stripePublicKey %>');
    const elements = stripe.elements();

    // Custom styling for the card Element
    const style = {
        base: {
            fontSize: '16px',
            color: '#2c3e50',
            '::placeholder': {
                color: '#aab7c4'
            },
            iconColor: '#d3a033'
        },
        invalid: {
            color: '#dc3545',
            iconColor: '#dc3545'
        }
    };

    // Create card Element with custom styling
    const card = elements.create('card', {
        style: style,
        hidePostalCode: true
    });
    card.mount('#card-element');

    // Show card brand icon
    card.on('change', function(event) {
        const displayError = document.getElementById('card-errors');
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
        
        // Update card brand icon
        if (event.brand) {
            const brandIcon = document.querySelector('.card-icon');
            if (brandIcon) {
                brandIcon.src = `/assets/img/cards/${event.brand}.png`;
            }
        }
    });

    // Handle form submission
    const form = document.getElementById('payment-form');
    const submitButton = document.getElementById('checkout-button');
    
    form.addEventListener('submit', async function(event) {
        event.preventDefault();
        
        submitButton.disabled = true;
        document.querySelector('.payment-processing').style.display = 'block';

        try {
            const pathParts = window.location.pathname.split('/');
            const propertyId = pathParts[pathParts.length - 1];

            // Create payment intent
            const response = await fetch(`/property/buy/${propertyId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const session = await response.json();

            if (session.error) {
                window.location.href = `/property/purchase/cancel?error=${encodeURIComponent(session.error)}`;
                return;
            }

            // Confirm card payment
            const result = await stripe.confirmCardPayment(session.clientSecret, {
                payment_method: {
                    card: card,
                }
            });

            if (result.error) {
                // Redirect to cancel page with error message
                window.location.href = `/property/purchase/cancel?error=${encodeURIComponent(result.error.message)}`;
                return;
            }

            if (result.paymentIntent.status === 'succeeded') {
                // Payment successful
                window.location.href = `/property/purchase/success?session_id=${result.paymentIntent.id}`;
            } else {
                // Payment failed or other status
                window.location.href = `/property/purchase/cancel?status=${result.paymentIntent.status}`;
            }

        } catch (error) {
            // Network or other errors - redirect to cancel page
            window.location.href = `/property/purchase/cancel?error=${encodeURIComponent(error.message)}`;
        }
    });
</script>
<%- include('../includes/footer.ejs') %>