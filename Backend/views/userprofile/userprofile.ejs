<%- include('../includes/head.ejs') %>
<%- include('../includes/header.ejs') %>
<%- include('../includes/navbar.ejs') %>

<div class="content-area user-profiel" style="background-color: #FCFCFC;">
    <div class="container">
        <div class="row">
            <div class="col-sm-10 col-sm-offset-1 profiel-container">
                <form action="/userprofile" method="POST" enctype="multipart/form-data" id="profileForm">
                    <div class="profiel-header">
                        <h3><b>BUILD</b> YOUR PROFILE <br><small>This information will let us know more about you.</small></h3>
                        <hr>
                    </div>

                    <div class="clear">
                        <div class="col-sm-3 col-sm-offset-1">
                            <div class="picture-container">
                                <div class="picture">
                                    <img src="/uploads/<%= user.user_image %>" class="picture-src" id="wizardPicturePreview" title=""/>
                                    <input type="file" id="wizard-picture" name="user_Image" onchange="previewImage(event)">
                                </div>
                                <h6>Choose Picture</h6>
                            </div>
                        </div>

                        <div class="col-sm-3 padding-top-25">
                            <div class="form-group">
                                <label>First Name <small>(required)</small></label>
                                <input name="First_Name" type="text" class="form-control" placeholder="Andrew..." value="<%= user.First_Name %>" required>
                            </div>
                            <div class="form-group">
                                <label>Last Name <small>(required)</small></label>
                                <input name="Last_Name" type="text" class="form-control" placeholder="Smith..." value="<%= user.Last_Name %>" required>
                            </div>
                            <div class="form-group">
                                <label>Email <small>(required)</small></label>
                                <input name="Email" type="email" class="form-control" placeholder="andrew@email.com" value="<%= user.Email %>" required>
                            </div>
                        </div>
                    </div>

                    <div class="clear">
                        <br><hr><br>
                        <div class="col-sm-5 col-sm-offset-1">
                            <div class="form-group">
                                <label>Facebook:</label>
                                <input name="Facebook" type="text" class="form-control" placeholder="https://facebook.com/user" value="<%= user.Facebook %>">
                            </div>
                            <div class="form-group">
                                <label>Twitter:</label>
                                <input name="Twitter" type="text" class="form-control" placeholder="https://Twitter.com/@user" value="<%= user.Twitter %>">
                            </div>
                            <div class="form-group">
                                <label>Website:</label>
                                <input name="Website" type="text" class="form-control" placeholder="https://yoursite.com/" value="<%= user.Website %>">
                            </div>
                        </div>

                        <div class="col-sm-5">
                            <div class="form-group">
                                <label>Public email:</label>
                                <input name="Public_email" type="email" class="form-control" placeholder="p-email@rmail.com" value="<%= user.Public_email %>">
                            </div>
                            <div class="form-group">
                                <label>Phone:</label>
                                <input name="Phone" type="text" class="form-control" placeholder="+1 9090909090" value="<%= user.Phone %>">
                            </div>
                            <div class="form-group">
                                <label>FAX:</label>
                                <input name="FAX" type="text" class="form-control" placeholder="+1 9090909090" value="<%= user.FAX %>">
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-5 col-sm-offset-1">
                        <br>
                        <input type="submit" class="btn btn-finish" style="background-image: linear-gradient(to bottom, #fad609 0, #fad609 100%); color:white; font-weight:bold;" name="finish" value="Finish">
                    </div>
                </form>
            </div>
        </div><!-- end row -->
    </div>
</div>
<div class="modal fade" id="cropperModal" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-lg">
      <div class="modal-content">
          <div class="modal-header">
              <h4 class="modal-title">Crop Image</h4>
              <button type="button" class="close" data-dismiss="modal">&times;</button>
          </div>
          <div class="modal-body">
              <div class="img-container">
                  <img id="cropperImage" src="" style="max-width: 100%;">
              </div>
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
          </div>
      </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const wizardPicture = document.getElementById('wizard-picture');
  const picturePreview = document.getElementById('wizardPicturePreview');
  const cropperModal = document.getElementById('cropperModal');
  const cropperImage = document.getElementById('cropperImage');
  let cropper;
  let croppedImageData;

  wizardPicture.addEventListener('change', function(e) {
      const file = this.files[0];
      const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];

      if (file && allowedTypes.includes(file.type)) {
          const reader = new FileReader();
          reader.onload = function(e) {
              cropperImage.src = e.target.result;
              $(cropperModal).modal('show');
              
              if (cropper) {
                  cropper.destroy();
              }
              
              cropper = new Cropper(cropperImage, {
                  aspectRatio: 1,
                  viewMode: 2,
                  preview: '.preview'
              });
          };
          reader.readAsDataURL(file);
      }
  });

  document.getElementById('cropButton').addEventListener('click', function() {
      const canvas = cropper.getCroppedCanvas();
      croppedImageData = canvas.toDataURL();
      picturePreview.src = croppedImageData;
      $(cropperModal).modal('hide');
  });

  document.getElementById('profileForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      const formData = new FormData(this);
      
      if (croppedImageData) {
          formData.append('croppedImage', croppedImageData);
      }

      try {
          const res = await fetch('/userprofile', {
              method: 'POST',
              body: formData
          });

          const result = await res.json();
          if (res.ok) {
              window.location.reload();
          } else {
              alert('Failed to update profile');
          }
      } catch (err) {
          console.error(err);
          alert('Error updating profile');
      }
  });
});
</script>

<%- include('../includes/footer.ejs') %>

<script>
async function loadUserProfile() {
  const query = `
    query {
      getUserProfile {
        First_Name
        Last_Name
        Email
        Facebook
        Twitter
        Website
        Public_email
        Phone
        FAX
        user_image
      }
    }
  `;
  const res = await fetch('/userprofile', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ query })
  });
  const json = await res.json();
  const profile = json.data?.getUserProfile;
  if (profile) {
    for (const key in profile) {
      const input = document.querySelector(`[name="${key}"]`);
      if (input) input.value = profile[key];
    }
    document.getElementById('wizardPicturePreview').src = `/uploads/${profile.user_image}`;
  }
}

document.addEventListener('DOMContentLoaded', loadUserProfile);

document.getElementById('profileForm').addEventListener('submit', async function (e) {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);
 
    try {
      const res = await fetch('/userprofile', {
        method: 'POST',
        body: formData
      });
 
      const result = await res.json();
      if (res.ok) {
       console.log("hello");
      } else {
        console.log("hello");
      }
    } catch (err) {
      console.error(err);
     console.log("hello");
    }
  });
const multer = require('multer');
const upload = multer({ dest: 'uploads/' });

app.post('/userprofile', upload.single('user_Image'), async (req, res) => {
  try {
    const { First_Name, Last_Name, Email, Phone, Facebook, Twitter, Website, Public_email, FAX } = req.body;
    const user_image = req.file ? req.file.filename : null; 

   
    const updatedUser = await User.findByIdAndUpdate(
      req.userId,  
      {
        First_Name,
        Last_Name,
        Email,
        Phone,
        Facebook,
        Twitter,
        Website,
        Public_email,
        FAX,
        user_image,  
      },
      { new: true }
    );

    if (!updatedUser) {
      return res.status(404).json({ error: 'User not found' });
    }

    res.json(updatedUser);
  } catch (error) {
    console.error(error);
    res.status(400).json({ error: 'Failed to update profile' });
  }
});

</script>

<%- include('../includes/end.ejs') %>
